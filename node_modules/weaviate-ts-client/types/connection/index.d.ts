import { OidcAuthenticator } from './auth';
import { HttpClient } from './httpClient';
import { ConnectionParams } from '..';
import { Variables } from 'graphql-request';
export default class Connection {
    private apiKey?;
    private authEnabled;
    private gql;
    readonly http: HttpClient;
    oidcAuth?: OidcAuthenticator;
    constructor(params: ConnectionParams);
    private parseAuthParams;
    private sanitizeParams;
    post: (path: string, payload: any, expectReturnContent?: boolean) => any;
    put: (path: string, payload: any, expectReturnContent?: boolean) => any;
    patch: (path: string, payload: any) => any;
    delete: (path: string, payload: any, expectReturnContent?: boolean) => any;
    head: (path: string, payload: any) => any;
    get: (path: string, expectReturnContent?: boolean) => any;
    query: (query: any, variables?: Variables) => Promise<{
        data: any;
    }>;
    login: () => Promise<string>;
}
export * from './auth';
