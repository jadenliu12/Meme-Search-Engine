import Connection from '../connection';
import { CommandBase } from '../validation/commandBase';
import { BatchRequest, WeaviateObject, WeaviateObjectsGet } from '../openapi/types';
import { ConsistencyLevel } from '../data/replication';
export default class ObjectsBatcher extends CommandBase {
    private consistencyLevel?;
    objects: WeaviateObject[];
    constructor(client: Connection);
    /**
     * can be called as:
     *  - withObjects(...[obj1, obj2, obj3])
     *  - withObjects(obj1, obj2, obj3)
     *  - withObjects(obj1)
     * @param  {...WeaviateObject[]} objects
     */
    withObjects(...objects: WeaviateObject[]): this;
    withObject(object: WeaviateObject): this;
    withConsistencyLevel: (cl: ConsistencyLevel) => this;
    payload: () => BatchRequest;
    validateObjectCount: () => void;
    validate: () => void;
    do: () => Promise<WeaviateObjectsGet[]>;
}
