import Connection from '../connection';
import { CommandBase } from '../validation/commandBase';
import { BatchDelete, BatchDeleteResponse, WhereFilter } from '../openapi/types';
import { ConsistencyLevel } from '../data/replication';
import { DeleteOutput } from '.';
export default class ObjectsBatchDeleter extends CommandBase {
    private className?;
    private consistencyLevel?;
    private dryRun?;
    private output?;
    private whereFilter?;
    constructor(client: Connection);
    withClassName(className: string): this;
    withWhere(whereFilter: WhereFilter): this;
    withOutput(output: DeleteOutput): this;
    withDryRun(dryRun: boolean): this;
    withConsistencyLevel: (cl: ConsistencyLevel) => this;
    payload: () => BatchDelete;
    validateClassName: () => void;
    validateWhereFilter: () => void;
    validate: () => void;
    do: () => Promise<BatchDeleteResponse>;
}
