import Connection from '../connection';
import BackupRestoreStatusGetter from './backupRestoreStatusGetter';
import { CommandBase } from '../validation/commandBase';
import { BackupRestoreRequest, BackupRestoreResponse, BackupRestoreStatusResponse } from '../openapi/types';
import { Backend } from '.';
export default class BackupRestorer extends CommandBase {
    private backend;
    private backupId;
    private excludeClassNames?;
    private includeClassNames?;
    private statusGetter;
    private waitForCompletion?;
    constructor(client: Connection, statusGetter: BackupRestoreStatusGetter);
    withIncludeClassNames(...classNames: string[]): this;
    withExcludeClassNames(...classNames: string[]): this;
    withBackend(backend: Backend): this;
    withBackupId(backupId: string): this;
    withWaitForCompletion(waitForCompletion: boolean): this;
    validate: () => void;
    do: () => Promise<BackupRestoreResponse>;
    _restore: (payload: BackupRestoreRequest) => Promise<BackupRestoreResponse>;
    _restoreAndWaitForCompletion: (payload: BackupRestoreRequest) => Promise<BackupRestoreResponse>;
    private _path;
    _merge: (restoreStatusResponse: BackupRestoreStatusResponse, restoreResponse: BackupRestoreResponse) => BackupRestoreResponse;
}
