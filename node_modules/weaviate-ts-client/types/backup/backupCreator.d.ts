import BackupCreateStatusGetter from './backupCreateStatusGetter';
import Connection from '../connection';
import { CommandBase } from '../validation/commandBase';
import { BackupCreateRequest, BackupCreateResponse, BackupCreateStatusResponse } from '../openapi/types';
import { Backend } from '.';
export default class BackupCreator extends CommandBase {
    private backend;
    private backupId;
    private excludeClassNames?;
    private includeClassNames?;
    private statusGetter;
    private waitForCompletion;
    constructor(client: Connection, statusGetter: BackupCreateStatusGetter);
    withIncludeClassNames(...classNames: string[]): this;
    withExcludeClassNames(...classNames: string[]): this;
    withBackend(backend: Backend): this;
    withBackupId(backupId: string): this;
    withWaitForCompletion(waitForCompletion: boolean): this;
    validate: () => void;
    do: () => Promise<BackupCreateResponse>;
    _create: (payload: BackupCreateRequest) => Promise<BackupCreateResponse>;
    _createAndWaitForCompletion: (payload: BackupCreateRequest) => Promise<BackupCreateResponse>;
    private _path;
    _merge: (createStatusResponse: BackupCreateStatusResponse, createResponse: BackupCreateResponse) => BackupCreateResponse;
}
