import Connection from '../connection';
import { WeaviateObject } from '../openapi/types';
import { CommandBase } from '../validation/commandBase';
import { ObjectsPath } from './path';
import { ConsistencyLevel } from './replication';
export default class GetterById extends CommandBase {
    private additional;
    private className;
    private id;
    private consistencyLevel?;
    private nodeName?;
    private objectsPath;
    constructor(client: Connection, objectsPath: ObjectsPath);
    withId: (id: string) => this;
    withClassName: (className: string) => this;
    extendAdditional: (prop: string) => this;
    withAdditional: (additionalFlag: string) => this;
    withVector: () => this;
    withConsistencyLevel: (cl: ConsistencyLevel) => this;
    withNodeName: (nodeName: string) => this;
    validateId: () => void;
    validate: () => void;
    buildPath: () => Promise<string>;
    do: () => Promise<WeaviateObject>;
}
