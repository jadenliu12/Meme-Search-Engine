import { DbVersionSupport } from '../utils/dbVersion';
import { ConsistencyLevel } from './replication';
export declare class ObjectsPath {
    private dbVersionSupport;
    constructor(dbVersionSupport: DbVersionSupport);
    buildCreate(consistencyLevel: string | undefined): Promise<string>;
    buildDelete(id: string, className: string, consistencyLevel: string | undefined): Promise<string>;
    buildCheck(id: string, className: string): Promise<string>;
    buildGetOne(id: string, className: string, additional: string[], consistencyLevel?: ConsistencyLevel, nodeName?: string): Promise<string>;
    buildGet(className?: string, limit?: number, additional?: string[], after?: string): Promise<string>;
    buildUpdate(id: string, className: string, consistencyLevel: string | undefined): Promise<string>;
    buildMerge(id: string, className: string, consistencyLevel: string | undefined): Promise<string>;
    build(params: any, modifiers: any): Promise<string>;
    addClassNameDeprecatedNotSupportedCheck(params: any, path: string, support: any): string;
    addClassNameDeprecatedCheck(params: any, path: string, support: any): string;
    addId(params: any, path: string): string;
    addQueryParams(params: any, path: string): string;
    addQueryParamsForGet(params: any, path: string, support: any): string;
}
export declare class ReferencesPath {
    private dbVersionSupport;
    constructor(dbVersionSupport: DbVersionSupport);
    build(id: string, className: string, property: string, consistencyLevel?: ConsistencyLevel): Promise<string>;
}
