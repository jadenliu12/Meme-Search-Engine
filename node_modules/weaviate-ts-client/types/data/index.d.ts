import Creator from './creator';
import Validator from './validator';
import Updater from './updater';
import Merger from './merger';
import Getter from './getter';
import GetterById from './getterById';
import Deleter from './deleter';
import Checker from './checker';
import ReferenceCreator from './referenceCreator';
import ReferenceReplacer from './referenceReplacer';
import ReferenceDeleter from './referenceDeleter';
import ReferencePayloadBuilder from './referencePayloadBuilder';
import { DbVersionSupport } from '../utils/dbVersion';
import Connection from '../connection';
export interface Data {
    creator: () => Creator;
    validator: () => Validator;
    updater: () => Updater;
    merger: () => Merger;
    getter: () => Getter;
    getterById: () => GetterById;
    deleter: () => Deleter;
    checker: () => Checker;
    referenceCreator: () => ReferenceCreator;
    referenceReplacer: () => ReferenceReplacer;
    referenceDeleter: () => ReferenceDeleter;
    referencePayloadBuilder: () => ReferencePayloadBuilder;
}
declare const data: (client: Connection, dbVersionSupport: DbVersionSupport) => Data;
export default data;
export { default as Creator } from './creator';
export { default as Validator } from './validator';
export { default as Updater } from './updater';
export { default as Merger } from './merger';
export { default as Getter } from './getter';
export { default as GetterById } from './getterById';
export { default as Deleter } from './deleter';
export { default as Checker } from './checker';
export { default as ReferenceCreator } from './referenceCreator';
export { default as ReferenceReplacer } from './referenceReplacer';
export { default as ReferenceDeleter } from './referenceDeleter';
export { default as ReferencePayloadBuilder } from './referencePayloadBuilder';
