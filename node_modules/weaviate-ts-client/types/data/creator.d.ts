import Connection from '../connection';
import { ObjectsPath } from './path';
import { CommandBase } from '../validation/commandBase';
import { Properties, WeaviateObject } from '../openapi/types';
import { ConsistencyLevel } from './replication';
export default class Creator extends CommandBase {
    private className?;
    private consistencyLevel?;
    private id?;
    private objectsPath;
    private properties?;
    private vector?;
    constructor(client: Connection, objectsPath: ObjectsPath);
    withVector: (vector: number[]) => this;
    withClassName: (className: string) => this;
    withProperties: (properties: Properties) => this;
    withId: (id: string) => this;
    withConsistencyLevel: (cl: ConsistencyLevel) => this;
    validateClassName: () => void;
    payload: () => {
        vector: number[] | undefined;
        properties: {
            [key: string]: unknown;
        } | undefined;
        class: string | undefined;
        id: string | undefined;
    };
    validate: () => void;
    do: () => Promise<WeaviateObject>;
}
