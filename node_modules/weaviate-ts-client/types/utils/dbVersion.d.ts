export declare class DbVersionSupport {
    private dbVersionProvider;
    constructor(dbVersionProvider: VersionProvider);
    supportsClassNameNamespacedEndpointsPromise(): Promise<{
        version: string | undefined;
        supports: boolean;
        warns: {
            deprecatedNonClassNameNamespacedEndpointsForObjects: () => void;
            deprecatedNonClassNameNamespacedEndpointsForReferences: () => void;
            deprecatedNonClassNameNamespacedEndpointsForBeacons: () => void;
            notSupportedClassNamespacedEndpointsForObjects: () => void;
            notSupportedClassNamespacedEndpointsForReferences: () => void;
            notSupportedClassNamespacedEndpointsForBeacons: () => void;
            notSupportedClassParameterInEndpointsForObjects: () => void;
        };
    }>;
    supportsClassNameNamespacedEndpoints(version?: string): boolean;
}
export interface VersionProvider {
    getVersionPromise(): Promise<string>;
}
export declare class DbVersionProvider implements VersionProvider {
    private versionPromise?;
    private readonly emptyVersionPromise;
    private versionGetter;
    constructor(versionGetter: () => Promise<string>);
    getVersionPromise(): Promise<string>;
    refresh(force?: boolean): Promise<boolean>;
    assignPromise(version: string): Promise<string>;
}
