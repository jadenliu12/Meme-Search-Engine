import { NearTextArgs } from './nearText';
import { NearVectorArgs } from './nearVector';
import { NearObjectArgs } from './nearObject';
import { NearImageArgs } from './nearImage';
import { AskArgs } from './ask';
import Connection from '../connection';
import { CommandBase } from '../validation/commandBase';
export default class Explorer extends CommandBase {
    private askString?;
    private fields?;
    private group?;
    private limit?;
    private nearImageString?;
    private nearObjectString?;
    private nearTextString?;
    private nearVectorString?;
    private params;
    constructor(client: Connection);
    withFields: (fields: string) => this;
    withLimit: (limit: number) => this;
    withNearText: (args: NearTextArgs) => this;
    withNearObject: (args: NearObjectArgs) => this;
    withAsk: (args: AskArgs) => this;
    withNearImage: (args: NearImageArgs) => this;
    withNearVector: (args: NearVectorArgs) => this;
    validateGroup: () => void;
    validateIsSet: (prop: string | undefined | null, name: string, setter: string) => void;
    validate: () => void;
    do: () => Promise<any>;
}
